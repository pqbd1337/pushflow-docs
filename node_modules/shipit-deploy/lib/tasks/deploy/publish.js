"use strict";

exports.__esModule = true;
exports.default = void 0;

var _shipitUtils = _interopRequireDefault(require("shipit-utils"));

var _chalk = _interopRequireDefault(require("chalk"));

var _posix = _interopRequireDefault(require("path2/posix"));

var _extendShipit = _interopRequireDefault(require("../../extendShipit"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/**
 * Publish task.
 * - Update symbolic link.
 */
const publishTask = shipit => {
  _shipitUtils.default.registerTask(shipit, 'deploy:publish',
  /*#__PURE__*/
  _asyncToGenerator(function* () {
    (0, _extendShipit.default)(shipit);
    shipit.log('Publishing release "%s"', shipit.releasePath);

    const relativeReleasePath = _posix.default.join('releases', shipit.releaseDirname);
    /* eslint-disable prefer-template */


    const res = yield shipit.remote('cd ' + shipit.config.deployTo + ' && ' + 'if [ -d current ] && [ ! -L current ]; then ' + 'echo "ERR: could not make symlink"; ' + 'else ' + 'ln -nfs ' + relativeReleasePath + ' current_tmp && ' + 'mv -fT current_tmp current; ' + 'fi');
    /* eslint-enable prefer-template */

    const failedresult = res && res.stdout ? res.stdout.filter(r => r.indexOf('could not make symlink') > -1) : [];

    if (failedresult.length && failedresult.length > 0) {
      shipit.log(_chalk.default.yellow(`Symbolic link at remote not made, as something already exists at ${(0, _posix.default)(shipit.config.deployTo, 'current')}`));
    }

    shipit.log(_chalk.default.green('Release published.'));
    shipit.emit('published');
  }));
};

var _default = publishTask;
exports.default = _default;